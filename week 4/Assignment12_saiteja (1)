{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP/L/E/ce3B8TVb+/kI3O3/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2upAOXwZpaRQ","executionInfo":{"status":"ok","timestamp":1705668558836,"user_tz":-330,"elapsed":445,"user":{"displayName":"Sai Teja","userId":"03866594505487991622"}},"outputId":"541b6ed5-a471-4167-c188-ca00d3e0299c"},"outputs":[{"output_type":"stream","name":"stdout","text":["interseting element: {16}\n","complement element: {2, 11, 14, 15, 16, 25}\n"]}],"source":["#program of intersection and complement operation on a set without using inbuilt functions\n","\n","set1 = {25,16,11,2}\n","set2 = {14,15,16}\n","#intersection\n","l1=[]\n","for element in set2:\n","  if element in set1:\n","    l1.append(element)\n","print(f'interseting element: {set(l1)}')\n","#complement\n","l2=list(set1)\n","for ele in set2:\n","  l2.append(ele)\n","print(f'complement element: {set(l2)}')"]},{"cell_type":"code","source":["#program to store subject wise details of 5 students\n","student_details = {}\n","subjects = ['English', 'Hindi', 'Maths', 'Science', 'Social']\n","for i in range(1,6):\n","  stu_name = input(f'Enter the name of student{i}: ')\n","  student_details[stu_name]={}\n","\n","  for sub in subjects:\n","    marks = int(input(f\"Enter {stu_name}'s marks in {sub}: \"))\n","    student_details[stu_name][sub]=marks\n","\n","print(\"\\nStudent Details:\")\n","for student, details in student_details.items():\n","  print(f\"\\n{student}'s Details:\")\n","  for subject, marks in details.items():\n","    print(f\"{subject}: {marks}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zgCxVoMKxPWp","executionInfo":{"status":"ok","timestamp":1705680659556,"user_tz":-330,"elapsed":98753,"user":{"displayName":"Sai Teja","userId":"03866594505487991622"}},"outputId":"3becadd3-47b6-4f08-c2b9-59e2e9920c16"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the name of student1: sai\n","Enter sai's marks in English: 54\n","Enter sai's marks in Hindi: 85\n","Enter sai's marks in Maths: 65\n","Enter sai's marks in Science: 45\n","Enter sai's marks in Social: 85\n","Enter the name of student2: teja\n","Enter teja's marks in English: 78\n","Enter teja's marks in Hindi: 96\n","Enter teja's marks in Maths: 88\n","Enter teja's marks in Science: 75\n","Enter teja's marks in Social: 95\n","Enter the name of student3: ram\n","Enter ram's marks in English: 75\n","Enter ram's marks in Hindi: 75\n","Enter ram's marks in Maths: 56\n","Enter ram's marks in Science: 45\n","Enter ram's marks in Social: 52\n","Enter the name of student4: harsh\n","Enter harsh's marks in English: 78\n","Enter harsh's marks in Hindi: 89\n","Enter harsh's marks in Maths: 85\n","Enter harsh's marks in Science: 74\n","Enter harsh's marks in Social: 85\n","Enter the name of student5: dinesh\n","Enter dinesh's marks in English: 88\n","Enter dinesh's marks in Hindi: 96\n","Enter dinesh's marks in Maths: 74\n","Enter dinesh's marks in Science: 63\n","Enter dinesh's marks in Social: 96\n","\n","Student Details:\n","\n","sai's Details:\n","English: 54\n","Hindi: 85\n","Maths: 65\n","Science: 45\n","Social: 85\n","\n","teja's Details:\n","English: 78\n","Hindi: 96\n","Maths: 88\n","Science: 75\n","Social: 95\n","\n","ram's Details:\n","English: 75\n","Hindi: 75\n","Maths: 56\n","Science: 45\n","Social: 52\n","\n","harsh's Details:\n","English: 78\n","Hindi: 89\n","Maths: 85\n","Science: 74\n","Social: 85\n","\n","dinesh's Details:\n","English: 88\n","Hindi: 96\n","Maths: 74\n","Science: 63\n","Social: 96\n"]}]},{"cell_type":"code","source":["#program to implement union operation without using inbuilt function\n","A = {19,34,56,7}\n","B = {1,2,5,19,34,7}\n","l1 = list(A)\n","for ele in B:\n","  l1.append(ele)\n","print(set(l1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9HBUXXRrfoip","executionInfo":{"status":"ok","timestamp":1705681030030,"user_tz":-330,"elapsed":368,"user":{"displayName":"Sai Teja","userId":"03866594505487991622"}},"outputId":"43c4cc31-6279-42d9-c253-053d30440b26"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["{1, 34, 2, 5, 7, 19, 56}\n"]}]},{"cell_type":"code","source":["#program to sort list of elements without using inbuilt functions\n","questions = int(input(\"Enter number of questions: \"))\n","que_nos = []\n","\n","print('Enter Question numbers here: ')\n","for i in range(1,questions+1):\n","  q_no = int(input())\n","  que_nos.append(q_no)\n","\n","for i in range(1,questions+1):\n","  for j in range(questions-i):\n","    if que_nos[j] > que_nos[j+1]:\n","      que_nos[j],que_nos[j+1] = que_nos[j+1],que_nos[j]\n","\n","print(que_nos)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HegTf7eyhAtU","executionInfo":{"status":"ok","timestamp":1705695355317,"user_tz":-330,"elapsed":12608,"user":{"displayName":"Sai Teja","userId":"03866594505487991622"}},"outputId":"b04c4e9b-c72d-498c-bc7a-b0141a665ddb"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter number of questions: 4\n","Enter Question numbers here: \n","23\n","7\n","15\n","3\n","[3, 7, 15, 23]\n"]}]},{"cell_type":"code","source":["questions = [3,7,15,23]\n","searching_que = int(input('Enter searching question number: '))\n","for i in range(len(questions)):\n","  if searching_que == questions[i]:\n","    print(f'Solve it on page number {i+1}.')\n","else:\n","  print('You don’t have to solve this question.')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6X65qCJVY5CX","executionInfo":{"status":"ok","timestamp":1705696072433,"user_tz":-330,"elapsed":2883,"user":{"displayName":"Sai Teja","userId":"03866594505487991622"}},"outputId":"28d0ce7a-df30-4949-d5b2-d92ba468f518"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter searching question number: 15\n","Solve it on page number 3.\n","You don’t have to solve this question.\n"]}]}]}